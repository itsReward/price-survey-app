spring:
  application:
    name: price-survey-app
  datasource:
    url: jdbc:postgresql://localhost:5432/pricesurveydb
    username: ${DB_USERNAME:dev}
    password: ${DB_PASSWORD:development}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: validate
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
    show-sql: false

  flyway:
    enabled: true
    locations: classpath:db/migration

  jackson:
    property-naming-strategy: LOWER_CAMEL_CASE  # This ensures camelCase property names
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      INDENT_OUTPUT: true

  security:
    user:
      password: disabled

  web:
    cors:
      allowed-origins: https://price-survey-frontend.onrender.com
      allowed-methods: GET,POST,PUT,DELETE,OPTIONS
      allowed-headers: Authorization,Content-Type,Origin,Accept,X-Requested-With
      exposed-headers: Authorization
      allow-credentials: true
      max-age: 3600

server:
  port: 8080

logging:
  level:
    com.pricesurvey: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG # Add this
    #org.hibernate: DEBUG # Add this to see SQL errors

jwt:
  secret: ${JWT_SECRET:supersecretkeythatisverylongandunguessable123456789ABCDEFGjksdvhkhwsvbskvkdshfjsnwufhdskfh9879FHDSHJG5fghvghhgd87hgjvvghvgvhgcffghvfhgwfvguHIJKLMNOPQRSTUVWXYZ}
  expiration: ${JWT_EXPIRATION:86400000}

app:
  admin:
    email: ${ADMIN_EMAIL:garvey@pricesurvey.com}
    password: ${ADMIN_PASSWORD:Reward2108!}

# Google OAuth Configuration
google:
  client-id: ${GOOGLE_CLIENT_ID}
  client-secret: ${GOOGLE_CLIENT_SECRET}